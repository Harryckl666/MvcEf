<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ include file="$(ProjectDir)/Include/DbHelper.ttinclude"  #>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>

<# manager.StartHeader(); #>
//-----------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成 分离的实体
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> by Harryckl
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

<# manager.EndBlock(); #>
   //在这里需要一个for循环来遍历数据库中所有的表放置在下面即可，这样就实现了所有的表对应的仓储显示出来了。
  <# 
    foreach(DbTable table in DbHelper.GetDbTables())
    { 
   
    if(table.TableName!="__MigrationHistory"&&table.TableName!="SystemUsersSystemRoles")
    {
    #>
	 <# 
	   manager.StartNewFile(table.TableName+".cs");
	   #>
using System;
namespace SqlToModel.Model
{    
 /// <summary>
		/// <#=table.Remark#>
		/// </summary>		
    public class <#=table.TableName#>
    {
    <# foreach (DbColumn column in DbHelper.GetDbColumns(table.TableName)){#>
	
        /// <summary>
		/// <#=column.Remark#>
		/// </summary>		
     public <#=column.ColumnType#> <#=column.ColumnName#>{get;set;}
	  
	<#}#>
	}
	}
	
	<# }
}#>
<# manager.Process(true); #>

